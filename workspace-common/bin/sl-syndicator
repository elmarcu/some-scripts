#!/bin/bash
#small script for messaging a slack channel
#https://api.slack.com/methods/chat.postMessage

#GITHUB_PROJECT=(project on github.com)
#SLACK_TOKEN=(get token from https://api.slack.com/authentication/token-types#user)
#GITHUB_TOKEN=(get token from https://github.com/settings/tokens)

SLACK_CHANNELS="C062ZM9034H"
SLACK_CHANNELS_DEBUG="C062R58KY9K"

WORKSPACE_PROJECT_NAME="televisa"
REPOS="content-syndicator,descriptive-metadata-service"
BRANCH="main"

VERSION_QA=""
TAG_QA="-beta"

VERSION_STG=""
TAG_STG="-rc"

VERSION_PROD=""

echo "Loading message..."
MESSAGE=""

## find out SE versions on each ENV
for REPO in ${REPOS//,/ }
do
    git -C $WORKSPACE/$WORKSPACE_PROJECT_NAME/$REPO tag --sort=-creatordate > .tmp_git_$REPO.json
    while read line; do
        if [[ "$VERSION_QA" == "" ]] && [[ $line == *"$TAG_QA"* ]]; then
            VERSION_QA=$line
        fi
        if [[ "$VERSION_STG" == "" ]] && [[ $line == *"$TAG_STG"* ]]; then
            VERSION_STG=$line
        fi
        if [[ "$VERSION_PROD" == "" ]] && [[ $line != *"$TAG_QA"* ]] && [[ $line != *"$TAG_STG"* ]]; then
            VERSION_PROD=$line
        fi
    done < .tmp_git_$REPO.json
    MESSAGE="$MESSAGE{\"type\": \"mrkdwn\",\"text\": \"*$REPO:*\nQA $VERSION_QA\nSTG $VERSION_STG\nPROD $VERSION_PROD\"},"
    VERSION_PROD=""
    VERSION_QA=""
    VERSION_STG=""
done

echo "Message to show"
MESSAGE="[{ \"type\": \"header\", \"text\": { \"type\": \"plain_text\", \"text\": \"Versions\"}},{\"type\": \"section\",\"fields\": [$MESSAGE]}]"
echo "$MESSAGE"

echo ""
read -p "Send message to channels? [yes|y|debug|d]" doit
if [[ "$doit" == "debug" ]] || [[ $doit == "d" ]]; then
    SLACK_CHANNELS=$SLACK_CHANNELS_DEBUG
fi
case $doit in
    yes|y|d|debug)
        for SLACK_CHANNEL_ID in ${SLACK_CHANNELS//,/ }
        do
            TS=$(curl -sL \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SLACK_TOKEN" \
            https://slack.com/api/chat.postMessage \
            -d "channel=$SLACK_CHANNEL_ID&blocks=$MESSAGE" | json_pp | grep -m 1 '"ts" : "' | tr '"' ' ' | tr ',' ' '  | awk '{print $3}')

            curl -sL \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SLACK_TOKEN" \
            https://slack.com/api/pins.add \
            -d "channel=$SLACK_CHANNEL_ID&timestamp=$TS"
        done
    ;;
    *) echo "Aborted" ;;
esac

rm .tmp_git_*.json