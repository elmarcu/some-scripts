#!/bin/bash
#small script for messaging a slack channel
#https://api.slack.com/methods/chat.postMessage

#GITHUB_PROJECT=(project on github.com)
#SLACK_TOKEN=(get token from https://api.slack.com/authentication/token-types#user)
#GITHUB_TOKEN=(get token from https://github.com/settings/tokens)

SLACK_CHANNELS="C0317UN5K8D,C05FZ5NB8J1"

WORKSPACE_PROJECT_NAME="televisa"
REPOS="client-cms-web,service-editorial,service-editorial-cloud-functions,service-editorial-scheduler"
BRANCH="main"

ENV_NAME_QA="qa"
VERSION_QA=""
TAG_QA="-beta"

ENV_NAME_STG="stg"
VERSION_STG=""
TAG_STG="-rc"

ENV_NAME_PROD="prd"
VERSION_PROD=""
ENVIRONMENTS="qa,stg,prd"

STATUS_QA=":hammer_and_pick:"
STATUS_STG=":rocket:"
STATUS_PROD=":this-is-fine-fire:"

FREEZE=""
MERGE_FREE=":white_check_mark:"
MERGE_LOCKED=":red-light-blinker::cold_face:"

REPO_EDITORIAL="service-editorial"

echo "Loading message..."

## find out which repos have branch protection
for REPO in ${REPOS//,/ }
do
    curl -sL \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer $GITHUB_TOKEN" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    "https://api.github.com/repos/$GITHUB_PROJECT/$REPO/branches/$BRANCH/protection" | grep lock_branch -A 2 > .tmp_git_$REPO.json

    FREEZE="$FREEZE$REPO $(if grep -q false ".tmp_git_$REPO.json"; then echo $MERGE_FREE; else echo $MERGE_LOCKED; fi) "
done

FREEZE="Merge: $FREEZE"

## find out SE versions on each ENV
for ENV in ${ENVIRONMENTS//,/ }
do
   git -C $WORKSPACE/$WORKSPACE_PROJECT_NAME/$REPO_EDITORIAL tag --sort=-creatordate > .tmp_git_$ENV.json

    while read line; do
        if [[ "$ENV" == "$ENV_NAME_QA" ]] && [[ "$VERSION_QA" == "" ]] && [[ $line == *"$TAG_QA" ]]; then
            VERSION_QA=$line
            break
        fi
        if [[ "$ENV" == "$ENV_NAME_STG" ]] && [[ "$VERSION_STG" == "" ]] && [[ $line == *"$TAG_STG" ]]; then
            VERSION_STG=$line
            break
        fi
        if [[ "$ENV" == "$ENV_NAME_PROD" ]] && [[ "$VERSION_PROD" == "" ]] && [[ $line != *"$TAG_QA" ]] && [[ $line != *"$TAG_STG" ]]; then
            VERSION_PROD=$line
            break
        fi
    done < .tmp_git_$ENV.json
done
VERSIONS="Version: QA $VERSION_QA$STATUS_QA | STG $VERSION_STG$STATUS_STG | PROD $VERSION_PROD$STATUS_PROD"
MESSAGE="$FREEZE ---- $VERSIONS"

echo "Message to show"
echo "$MESSAGE"

echo ""
read -p "Send message to channels? [yes|y]" doit
case $doit in
    yes|y)
        for SLACK_CHANNEL_ID in ${SLACK_CHANNELS//,/ }
        do
            TS=$(curl -sL \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SLACK_TOKEN" \
            https://slack.com/api/chat.postMessage \
            -d "channel=$SLACK_CHANNEL_ID&text=$MESSAGE" | json_pp | grep -m 1 '"ts" : "' | tr '"' ' ' | tr ',' ' '  | awk '{print $3}')

            curl -sL \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SLACK_TOKEN" \
            https://slack.com/api/pins.add \
            -d "channel=$SLACK_CHANNEL_ID&timestamp=$TS"
        done
    ;;
    *) echo "Aborted" ;;
esac

rm .tmp_git_*.json