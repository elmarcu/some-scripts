#!/bin/bash
#small script for changing slack channel's topic
#https://api.slack.com/methods/conversations.setTopic
#SLACK_TOKEN=(get token from https://api.slack.com/authentication/token-types#user)
#GITHUB_TOKEN=(get token from https://github.com/settings/tokens)

DEVS_SLACK_CHANNEL_ID="C0317UN5K8D"
QA_SLACK_CHANNEL_ID="C036D5SL3RS"

REPO_CMS="client-cms-web"
REPO_EDITORIAL="service-editorial"
BRANCH="main"

VERSION_QA=""
VERSION_STG=""
VERSION_PROD=""

STATUS_QA=":hammer_and_pick:"
STATUS_STG=":rocket:"
STATUS_PROD=":this-is-fine-fire:"

MERGE_FREE=":white_check_mark:"
MERGE_LOCKED=":red-light-blinker::cold_face:"

echo "Loading topic..."

## find out which repos have branch protection
for REPO in $REPO_CMS $REPO_EDITORIAL
do
    curl -sL \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer $GITHUB_TOKEN" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    "https://api.github.com/repos/$GITHUB_PROJECT/$REPO/branches/$BRANCH/protection" | grep lock_branch -A 2 > .tmp_$REPO.json
done

status () {
    if grep -q false ".tmp_$1.json"; then
        echo $MERGE_FREE
    else
        echo $MERGE_LOCKED
    fi
}
FREEZE="Merge: $REPO_CMS $(status $REPO_CMS) $REPO_EDITORIAL $(status $REPO_EDITORIAL)"

## find out SE versions on each ENV
    curl -sL \
    -H "Accept: application/json" \
    "https://$API_PROJECT/api/v1/versionLog" | json_pp | grep '"tag" : "' | tr -d '"tag" : "' > .tmp_git_tags.json

while read line; do
    if [[ "$VERSION_QA" == "" ]] && [[ $line == *"-be" ]]; then
        VERSION_QA="${line}ta"
    fi
    if [[ "$VERSION_STG" == "" ]] && [[ $line == *"-rc" ]]; then
        VERSION_STG=$line
    fi
    if [[ "$VERSION_PROD" == "" ]] && [[ $line != *"-be" ]] && [[ $line != *"-rc" ]]; then
        VERSION_PROD=$line
    fi
done < .tmp_git_tags.json
VERSIONS="Version: QA $VERSION_QA$STATUS_QA | STG $VERSION_STG$STATUS_STG | PROD $VERSION_PROD$STATUS_PROD"

MESSAGE="$FREEZE |/\| $VERSIONS"

echo "Message to show"
echo "$MESSAGE"

echo ""
read -p "Send message to channels? [yes|y]" doit
case $doit in
    yes|y)
        for SLACK_CHANNEL_ID in $DEVS_SLACK_CHANNEL_ID $QA_SLACK_CHANNEL_ID
        do
            curl -sL \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $SLACK_TOKEN" \
            https://slack.com/api/chat.postMessage \
            -d "channel=$SLACK_CHANNEL_ID&text=$MESSAGE"
        done
    ;;
    *) echo "Aborted" ;;
esac

rm .tmp_$REPO_CMS.json
rm .tmp_$REPO_EDITORIAL.json
rm .tmp_git_tags.json